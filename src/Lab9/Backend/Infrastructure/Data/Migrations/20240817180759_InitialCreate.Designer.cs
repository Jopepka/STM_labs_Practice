// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240817180759_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bluchera 32/1",
                            Latitude = 55.751244,
                            Longitude = 37.618423
                        },
                        new
                        {
                            Id = 2,
                            Address = "Tverskaya 7",
                            Latitude = 55.765219999999999,
                            Longitude = 37.605559999999997
                        });
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Food"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Semi-finished products wholesale",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Meat products",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Automobiles"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Lada",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Lada Granta",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Lada Largus",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Audi",
                            ParentCategoryId = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            CompanyName = "ООО Рога и Копыта"
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 2,
                            CompanyName = "ООО Машины и Механизмы"
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CompanyId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CompanyId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CompanyId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            CompanyId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            CompanyId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.CompanyPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyPhones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Phone = "2-222-222"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Phone = "3-333-333"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Phone = "8-923-666-13-13"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            Phone = "4-444-444"
                        });
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.HasOne("Domain.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Domain.Models.CompanyCategory", b =>
                {
                    b.HasOne("Domain.Models.Company", null)
                        .WithMany("CompanyCategories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Company", b =>
                {
                    b.Navigation("CompanyCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
